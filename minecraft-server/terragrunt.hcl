locals {
  env            = "prod" # ${get_env("ENV")} desa, test, prod
  org            = "minecraft"
  created_by     = "minecraft"
  details        = "minecraft"
  region         = "us-east-2"
  name           = "minecraft-server"
  project        = "${local.name}-${local.env}-${local.region}"
  bucket         = "${local.project}-terraform-state"
}

remote_state {
  backend = "s3"
  generate = {
    path      = "backend.tf"
    if_exists = "overwrite_terragrunt"
  }
  config = {
    bucket = "${local.bucket}"
    key = "${path_relative_to_include()}/terraform.tfstate"
    region         = "${local.region}"
    encrypt        = true
    dynamodb_table = "terraform-${local.bucket}-table"
  }
}

generate "provider" {
  path      = "provider.tf"
  if_exists = "overwrite"
  contents = <<EOF
provider "aws" {
  profile     = "me"
  region      = "${local.region}"
}
EOF
}


generate "root_values" {
  path      = "root_variables.tf"
  if_exists = "overwrite"
  contents  = <<EOF

variable "env" {
  description = "Environment - (Generated by terragrunt)"
  default =  "${local.env}"
}

variable "project" {
  description = "Project - (Generated by terragrunt)"
  default =  "${local.project}"
}

variable "project_name" {
  description = "Project Name- (Generated by terragrunt)"
  default =  "${local.name}"
}

variable "region" {
  description = "Region - (Generated by terragrunt)"
  default =  "${local.region}"
}

variable "org" {
  description = "Organization - (Generated by terragrunt)"
  default =  "${local.org}"
}

EOF
}


generate "tags" {
  path      = "tags.tf"
  if_exists = "overwrite"
  contents  = <<EOF

variable "tg_common_tags" {
  description = "Common tags for all gcp resources - (Generated by terragrunt)"
  default = {
    env           = "${local.env}"
    project       = "${local.project}"
    region        = "${local.region}"
    org           = "${local.org}"
    createdBy     = "${local.created_by}"
  }
}

EOF
}